.spacer {
    flex: 1 1 auto;
}

.toolbar {
  position: sticky;
  position: -webkit-sticky; /* For macOS/iOS Safari */
  top: 0; /* Sets the sticky toolbar to be on top */
  z-index: 1000; /* Ensure that your app's content doesn't overlap the toolbar */
}

.mat-drawer{
  min-width: 360px;
}

.container-img {
  display: flex;
  img {
      max-width: 300px;
      max-height: 65px;
      width: auto;
      height: auto;
  }
}

.mat-drawer, .mat-tree, .mat-tree-node {
    background-color: var(--primary-color);
    color: var(--text-primary-color);

    button {
      width: 100%;
      display: flex;
    }
}

.menu-item {
  text-decoration: none;
  color: var(--text-primary-color);
  cursor: pointer;
}

.content-container {
  height: 92.7%;
}

.content-container-mobile {
  padding: 0.2rem;
  height: 100%;
}

.example-container {
    display: flex;
    flex-direction: column;
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
  
  .example-is-mobile .example-toolbar {
    position: fixed;
    /* Make sure the toolbar will stay on top of the content as it scrolls past. */
    z-index: 2;
  }
  
  h1.example-app-name {
    margin-left: 8px;
  }
  
  .example-sidenav-container {
    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This
       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */
    flex: 1;
  }
  
  .example-is-mobile .example-sidenav-container {
    /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the
       `<body>` to be our scrolling element for mobile layouts. */
    flex: 1 0 auto;
  }

  